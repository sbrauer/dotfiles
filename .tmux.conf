# Note: It's possible to create key bindings that don't
# need the prefix.  Just use the -n option to bind-key.

# # Use Ctrl-Space instead of Ctrl-b as the tmux prefix.
# unbind C-b
# set -g prefix C-Space

# # change prefix to Ctrl-a (like in gnu-screen)
# unbind C-b
# set-option -g prefix C-a
# bind-key C-a send-prefix

# change prefix to Ctrl-s (doesn't seem to be used for anything else, and doesn't conflict with Ctrl-a in bash)
unbind C-b
set-option -g prefix C-s
#bind-key C-a send-prefix

# Handle for nested tmux. To send command to inner tmux: C-a a <command>
bind-key a send-prefix

# start with window 1 (instead of 0)
set -g base-index 1
# start with pane 1
set -g pane-base-index 1

# auto-renumber windows (to avoid "gaps" when closing windows)
set-option -g renumber-windows on

set-option -g repeat-time 1000

setw -g automatic-rename on

# Reload config file
#bind-key ^r source-file ~/.tmux.conf \; display-message "Reloaded config"
bind-key ^r source-file ~/.tmux.conf

# toggle status bar
#bind-key ^s set-option -g status

# Split panes with | (for vertical split) or - (for horizontal split).
unbind %
bind-key - split-window -v -c '#{pane_current_path}'
bind-key | split-window -h -c '#{pane_current_path}'
# Also bind backslash (like pipe without having to use shift).
bind-key \ split-window -h -c '#{pane_current_path}'

# Use Vi-style keys in copy mode
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection
# Use pbcopy instead...
#bind-key -t vi-copy y copy-selection
bind-key -t vi-copy Escape cancel

set-option -g default-command "reattach-to-user-namespace -l bash"
# pbcopy integration based on recipe at http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# Bind y (like vi yank) to copy to OSX pasteboard
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Enable mouse (handy for scrolling history)
setw -g mode-mouse on
# Note: Hold down Option key while selecting text with mouse to copy to system clipboard.

# Put that mouse to work
setw -g mouse-resize-pane on
setw -g mouse-select-pane on
setw -g mouse-select-window on

# Use Vi-style direction keys to select panes.
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# Use Ctrl and Vi-style direction keys to resize panes.
bind-key -r ^h resize-pane -L 1
bind-key -r ^j resize-pane -D 1
bind-key -r ^k resize-pane -U 1
bind-key -r ^l resize-pane -R 1

# Swap the current window with the one to the left or right.
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# Rebind the standard next/prev window keys with repeat enabled.
bind-key -r n next-window
bind-key -r p previous-window
bind-key -r Space next-layout

# Swap panes
bind-key -r { swap-pane -U
bind-key -r } swap-pane -D

# Set status bar
set -g status-bg black
set -g status-fg white

set-window-option -g window-status-format '#[fg=cyan,dim]#I#[fg=blue]:#[default]#W#[fg=gray,dim]#F'
set-window-option -g window-status-current-format '#[bg=cyan,fg=white]#I:#[bg=blue]#W#[fg=gray,dim]#F'

# Split window vertically with a small pane at the bottom.
# Adjust line height of the smaller pane with the -l option.
bind-key b split-window -v -l 8 -c '#{pane_current_path}'

# Show alert messages for a reasonable amount of time.
set -g display-time 1500

set -g default-terminal "screen-256color"

setw -g aggressive-resize on

set-option -g history-limit 10000
